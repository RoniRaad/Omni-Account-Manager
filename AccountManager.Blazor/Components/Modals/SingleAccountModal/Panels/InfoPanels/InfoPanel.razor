@using AccountManager.Core.Attributes
@using AccountManager.Core.Models
@using System.Reflection

<div class="info-panel-container">
    <Navigation ShowPageNavigation="Pages?.Count > 1" Title="@navigationTitle" IncrementPage="IncrementPage" DecrementPage="DecrementPage"></Navigation>
    <DynamicComponent Type="Pages?.ElementAt(pageIndex)" Parameters="parameters"></DynamicComponent>
</div>

@code {
    private string navigationTitle = "";
    [Parameter]
    public List<Type>? Pages { get; set; }

    [CascadingParameter]
    public Account? Account { get; set; }

    int pageIndex = 0;
    private Dictionary<string, object> parameters = new Dictionary<string, object>
        {
            ["IncrementPage"] = () => { },
            ["DecrementPage"] = () => { },
    };

    protected override Task OnInitializedAsync()
    {
        parameters["IncrementPage"] = (object)IncrementPage;
        parameters["DecrementPage"] = (object)DecrementPage;
        var page = Pages?.ElementAt(pageIndex);
        if (page is not null)
            navigationTitle = GetTitleFromType(page);

        return base.OnInitializedAsync();
    }

    private string GetTitleFromType(Type type)
    {
        SingleAccountPageAttribute? attribute = (SingleAccountPageAttribute?)Attribute.GetCustomAttribute(type, typeof(SingleAccountPageAttribute));
        if (attribute is not null)
            return attribute.Title;

        return "";
    }

    private void IncrementPage()
    {
        pageIndex++;
        if (pageIndex > Pages?.Count - 1)
            pageIndex = 0;

        var page = Pages?.ElementAt(pageIndex);

        if (page is null)
        {
            pageIndex--;
            return;
        }

        navigationTitle = GetTitleFromType(page);
    }

    private void DecrementPage()
    {
        pageIndex--;
        if (Pages?.Count is null)
            pageIndex = 0;
        else if (pageIndex < 0)
            pageIndex = Pages.Count - 1;

        var page = Pages?.ElementAt(pageIndex);

        if (page is null)
        {
            pageIndex++;
            return;
        }

        navigationTitle = GetTitleFromType(page);
    }
}
