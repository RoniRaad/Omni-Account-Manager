@using AccountManager.Core.Interfaces
@using AccountManager.Core.Models
@inject IValorantGraphService _graphService

<div class="graph-container">
    <div class="graph-row" >
        <div class="graph">
            <LineChartWrapper LineGraph="rankedRRChangeGraph"></LineChartWrapper>
        </div>
        <div class="graph">
            <PieChartWrapper PieChart="recentlyUsedOperatorsPieChart"></PieChartWrapper>
        </div>
    </div>
    <div class="graph-row" >
        <div class="graph">
            <LineChartWrapper LineGraph="rankedWinGraph"></LineChartWrapper>
        </div>
        <div class="graph">
            <BarChartWrapper BarChart="averageACS"></BarChartWrapper>
        </div>
    </div>
</div>

@code {
    public static string Title = "Data";
    [Parameter, EditorRequired]
    public Account Account { get; set; }
    [Parameter, EditorRequired]
    public Action IncrementPage { get; set; }
    [Parameter, EditorRequired]
    public Action DecrementPage { get; set; }

    LineGraph rankedRRChangeGraph;
    PieChart recentlyUsedOperatorsPieChart;
    LineGraph rankedWinGraph;
    BarChart averageACS;

    protected override async Task OnInitializedAsync()
    {
        if (Account is null)
            return;

        rankedRRChangeGraph = await _graphService.GetRankedRRChangeLineGraph(Account);
        recentlyUsedOperatorsPieChart = await _graphService.GetRecentlyUsedOperatorsPieChartAsync(Account);
        rankedWinGraph = await _graphService.GetRankedWinsLineGraph(Account);
        averageACS = await _graphService.GetRankedACS(Account);
    }
}