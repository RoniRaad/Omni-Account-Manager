@namespace AccountManager.Blazor.Components.Modals
@using AccountManager.Core.Interfaces
@using AccountManager.Blazor.Components.Modals;
@inject IAccountExportService _exportService

<div draggable="true" ondragstart="event.preventDefault(); event.stopPropagation();" class="modal show" style="display:block; color:var(--primary-dark);" tabindex="1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Export Account</h5>
                <button type="button" class="btn-close btn-close-white" @onclick="Close" aria-label="Close"></button>
            </div>
            <EditForm Model="@ExportAccountRequest">
                <div class="modal-body">
                        <div class="form-group">
                            <label for="currentPassword">Export Password</label>
                            <InputText style="margin-bottom:12px" type="password" class="form-control" id="exportPassword" @bind-Value="ExportAccountRequest.Password" placeholder="Export Password" required></InputText>
                        </div>
                        <div class="form-group">
                            <label for="folderPath">Folder Path</label>
                            <div class="input-group">
                                <InputText id="folderPath" type="text" class="text-input form-control" placeholder="Ex: C:\Accounts\exportedAccount.omni" @bind-Value="ExportAccountRequest.FolderPath" required></InputText>
                                <div class="input-group-append">
                                    <span @onclick="() => ShowFilePicker = true" class="btn oi-folder" type="button"></span>
                                </div>
                            </div>
                        </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-dark" @onclick="Submit">Export Account</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@if (ShowFilePicker)
{
    <FolderPickerModal CurrentDirectory="@ExportAccountRequest.FolderPath" DirectoryChosen="(dir) => { ExportAccountRequest.FolderPath = dir is not null ? dir : ExportAccountRequest.FolderPath; ShowFilePicker = false; InvokeAsync(() => StateHasChanged()); }"></FolderPickerModal>
}
