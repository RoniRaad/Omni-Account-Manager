@page "/"
@using AccountManager.Blazor.Components
@using AccountManager.Core.Enums
@using AccountManager.Core.Interfaces
@using AccountManager.Core.Models
@using AccountManager.Core.Services
@using AccountManager.Infrastructure.Services
@using Microsoft.Extensions.Caching.Memory
@inject IAccountService _accountService
@inject IMemoryCache _memoryCache
@inject AppState _appState
@inject AlertService _alertSerivce
@namespace AccountManager.Blazor.Pages

<div class="container-fluid">
    <table class="table table-fit">
        <tbody>
            @if (!DragMode){
                @foreach (var account in _appState.Accounts)
                {
                    <AccountListItem AccountService="_accountService" Account="account" ReloadList="() => LoadList()" RenderButtons="true"></AccountListItem>
                }
            }
            else{
                <Dropzone Items="_appState.Accounts" TItem="Account">
                    <div>
                        <AccountListItem AccountService="_accountService" Account="@context" ReloadList="() => LoadList()" RenderButtons="false" ></AccountListItem>
                    </div>
                </Dropzone>
            }
        </tbody>
    </table>
    <div class="row">
        <div class="col" style="margin-left: -3px" >
            @if (!DragMode)
            {
                <span @onclick="()=>DragMode = true" class="oi oi-list"></span>
                <span @onclick="() => addAccountPrompt = true" class="oi oi-plus"> </span>
            }
            else
            {
                <span @onclick="()=>{DragMode = false; SaveList();}" class="oi oi-check"></span>
            }

        </div>
    </div>
    @if (addAccountPrompt)
    {
        <NewAccountPrompt AccountService="_accountService" Close="() => {addAccountPrompt=false; LoadList();}"></NewAccountPrompt>
    }
</div>
