@page "/settings"
@using AccountManager.Core.Interfaces
@using AccountManager.Core.Models
@using AccountManager.Core.Services
@using AccountManager.Blazor.Components
@inject AppState _authService
@inject IUserSettingsService<UserSettings> _settings

<div class="container main">
    <EditForm Model="@_settings.Settings">
        <table>
            <tbody>
                <tr>
                    <th scope="row">
                        <p >Use account credentials to get current ranking</p>
                    </th>
                    <td>
                        <div class="form-check">
                            <InputCheckbox @bind-Value="_settings.Settings.UseAccountCredentials" id="credentialsCheckBox"></InputCheckbox>
                            <label class="form-check-label" for="credentialsCheckBox">
                                Use Credentials
                            </label>
                        </div>
                    </td>
                </tr>
                <tr>
                    <th scope="row">
                        <p>Change your account manager password</p>
                    </th>
                    <td>
                        <button class="btn btn-dark" @onclick="() => ShowChangePasswordPrompt=true">Change Password</button>
                    </td>
                </tr>
                <tr>
                    <th scope="row">
                        <p>Transfer legacy accounts</p>
                    </th>
                    <td>
                        <button class="btn btn-dark" @onclick=_settings.Transfer>Transfer</button>
                    </td>
                </tr>
                <tr>
                    <th scope="row">
                        <p>Save changes</p>
                    </th>
                    <td>
                        <button class="btn btn-dark" @onclick=_settings.Save>Save</button>
                    </td>
                </tr>
            </tbody>
        </table>
    </EditForm>
</div>

@if (ShowChangePasswordPrompt)
{
    <ChangePasswordModal SettingsService="_settings" Close="() => {ShowChangePasswordPrompt=false; InvokeAsync(()=>StateHasChanged());}"></ChangePasswordModal>
}