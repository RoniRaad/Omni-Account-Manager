@using AccountManager.Core.Services
@inherits LayoutComponentBase
@inject AuthService _authService; 
@inject AlertService _alertService; 

@if (!string.IsNullOrEmpty(_alertService.ErrorMessage)){
	<div class="alert alert-danger notification" role="alert">
		@_alertService.ErrorMessage
		<a @onclick="() => _alertService.ErrorMessage = string.Empty">X</a>
	</div>
}
else if (!string.IsNullOrEmpty(_alertService.InfoMessage)){
	<div class="alert alert-primary notification" role="alert">
		@_alertService.InfoMessage
		<a @onclick="() => _alertService.InfoMessage = string.Empty" style="float:right;cursor:pointer">X</a>
	</div>
}

@if (_alertService.TwoFactorPrompt){
	<div class="modal fade show d-block" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title">Account requires 2FA</h5>
					<button type="button" class="btn-close btn-close-white" @onclick="_alertService.Cancel2FA" aria-label="Close"></button>
				</div>
				<div class="modal-body">
					<EditForm Model="@_alertService.TwoFactorRequest">
						<h5 style="margin-bottom: 20px;text-align: center;"> Please enter the code that was sent to @_alertService.TwoFactorRequest.EmailHint</h5>
						<InputText id="auth2FA" style="margin-bottom: 12px" class="form-control input-text" @bind-Value="_alertService.TwoFactorRequest.Code" placeholder="Ex: 111111"></InputText>
					</EditForm>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-primary" @onclick="_alertService.Submit2FA">Submit</button>
					<button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="_alertService.Cancel2FA">Close</button>
				</div>
			</div>
		</div>
	</div>
}

@if (_authService.LoggedIn){
    <div class="page">
		<div class="sidebar">
			<NavMenu />
		</div>

		<main>

			<article class="content px-4">
				@Body
			</article>
		</main>
	</div>
}
else if (_authService.AuthInitialized)
{
	<form class="login-form">
		<div>
			<span class="oi oi-lock-locked"></span>
			<h3>Enter Passcode</h3>
			<div class="form-group">
				<input type="password" class="form-control" id="password" @bind-value=Password placeholder="Password">
			</div>
			<button type="submit" class="btn btn-dark" @onclick=Login>Login</button>
		</div>
	</form>
}
else {
	<form class="login-form">
		<div>
			<span class="oi oi-lock-unlocked"></span>
			<h3>Create Passcode</h3>
			<div class="form-group">
				<input type="password" class="form-control" id="password" @bind-value=Password placeholder="Password">
			</div>
			<button type="submit" class="btn btn-dark" @onclick=Register>Register</button>
		</div>
	</form>
}

@code{
	public string Password { get; set; }

	protected override async Task OnInitializedAsync() => _alertService.UpdateView = () => InvokeAsync(() => StateHasChanged());
	public async Task Login()
	{
		_authService.Login(Password);
        await InvokeAsync(() => StateHasChanged());
	}
	public async Task Register()
	{
		_authService.Register(Password);
        await InvokeAsync(() => StateHasChanged());
	}
}